{"version":3,"sources":["constants.ts","utils.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_CHARACTERS","getOriginInfo","origin","a","name","url","fetch","originResponse","json","originUrlData","dimension","type","residents","length","getEpisodeNames","episodeInfo","requests","map","Promise","all","episodeNames","names","response","finalNames","formatResponse","id","image","species","status","episode","originData","meta","originInfo","episodes","expanded","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","marginRight","transition","transitions","create","duration","shortest","darkTheme","createTheme","palette","mode","App","useState","rickAndMontyInfo","setRickAndMontyInfo","loader","setLoader","count","pages","next","prev","page","paginationInfo","setPaginationInfo","error","setErrorMessage","fetchCharacters","then","charactersData","results","formatedCharacterResponse","fullyResolvedCharacterData","info","catch","err","message","useEffect","className","Box","p","Typography","variant","Paper","elevation","Pagination","color","onChange","event","sx","display","justifyContent","hideNextButton","hidePrevButton","disabled","Grid","container","spacing","mx","characterInfo","index","planetName","planetDimmension","planetType","item","ThemeProvider","Card","width","CardHeader","avatar","Avatar","alt","src","height","title","CardMedia","component","CardContent","gutterBottom","CardActions","onClick","localDataCopy","expandedCharacter","find","char","expandedCharacterIndex","findIndex","handleExpandClick","Tooltip","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e20b051.chunk.js","sourcesContent":["export const GET_CHARACTERS = 'https://rickandmortyapi.com/api/character';","import { CHARACTER, ORIGIN, RICK_MORTY_TYPE } from \"./types\";\n\n/**\n * Author : Harsha Peddula ,Date: 9-11-2021\n * @param origin \n * @returns \n * Name of the character if url is present\n * else returns the dimensions,type and resident count\n */\nexport const getOriginInfo = async (origin: ORIGIN): Promise<Array<string>> => {\n    const { name, url } = origin;\n    if (url) {\n        const originResponse = await fetch(url);\n        const originUrlData = await originResponse.json();\n        const { dimension, type, residents } = originUrlData;\n        return [name, dimension, type, `Resident Count : ${residents?.length}`]\n    } else {\n        return [name]\n    }\n}\n\n/**\n * Author : Harsha Peddula ,Date: 9-11-2021\n * @param episodeInfo \n * @returns \n * Names of the episode the character is invloved in\n */\nexport const getEpisodeNames = async (episodeInfo: Array<string>): Promise<Array<string>> => {\n    let requests = episodeInfo.map((url: string) => fetch(url))\n    const episodeNames = await Promise.all(requests);\n    const names = (await Promise.all(episodeNames)).map(response => response.json())\n    const finalNames = await Promise.all(names)\n    return finalNames.map((name => name.name))\n}\n\n/**\n * Author : Harsha Peddula ,Date: 9-11-2021\n * @param response \n * @returns \n * object of type RICK_MORTY_TYPE, which is rendered on the UI\n */\nexport const formatResponse = async (response: CHARACTER[]): Promise<Promise<RICK_MORTY_TYPE>[]> => {\n    return response.map(async ({ id,image, name, species, status, origin, episode }: CHARACTER) => {\n        const originData = await getOriginInfo(origin)\n        const names = await getEpisodeNames(episode)\n        return { image, meta: [name, species, status], originInfo: [...originData], episodes: names,expanded:false,id }\n    })\n}","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { GET_CHARACTERS } from './constants';\nimport { formatResponse } from './utils';\nimport { ExpandMoreProps, PAGINATION, RICK_MORTY_TYPE } from './types';\nimport Paper from '@mui/material/Paper';\nimport { styled, ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Card, CardContent, Typography, Avatar, CardHeader, CardMedia, CardActions, Tooltip, Pagination } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport IconButton from '@mui/material/IconButton';\n\n\nconst ExpandMore = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\n\nconst darkTheme = createTheme({ palette: { mode: 'dark' } });\n\nfunction App() {\n  const [rickAndMontyInfo, setRickAndMontyInfo] = useState<RICK_MORTY_TYPE[]>([]);\n  const [loader, setLoader] = useState<boolean>(false);\n  const [paginationInfo, setPaginationInfo] = useState<PAGINATION>({ count: 0, pages: 0, next: '', prev: '', page: 1 });\n  const [error,setErrorMessage] = useState<string>('');\n\n  /**\n   * Author : Harsha Peddula ,Date: 10-11-2021\n   * @param characterInfo \n   * Function to handle the click of the expand toggle\n   * Finds the object along with the index from the available array\n   * if found toggles the expand state, other wise doesnot change the state\n   */\n  const handleExpandClick = (characterInfo: RICK_MORTY_TYPE) => {\n    const { id } = characterInfo;\n    let localDataCopy = [...rickAndMontyInfo];\n    let expandedCharacter = rickAndMontyInfo.find((char: RICK_MORTY_TYPE) => char.id === id);\n    let expandedCharacterIndex = rickAndMontyInfo.findIndex((char: RICK_MORTY_TYPE) => char.id === id);\n    if (expandedCharacter) {\n      expandedCharacter['expanded'] = !expandedCharacter['expanded']\n      localDataCopy[expandedCharacterIndex] = expandedCharacter\n      setRickAndMontyInfo([...localDataCopy])\n    }\n  };\n\n  /**\n   * Author : Harsha Peddula ,Date: 10-11-2021\n   * @param url \n   * @param page \n   * Function Used to fetch Character information\n   */\n  const fetchCharacters = (url: string, page: number) => {\n    fetch(url)\n      .then(response => response.json())\n      .then(async charactersData => {\n        const formatedCharacterResponse = await (formatResponse(charactersData.results))\n        const fullyResolvedCharacterData = await Promise.all(formatedCharacterResponse)\n        setRickAndMontyInfo([...fullyResolvedCharacterData] as Array<RICK_MORTY_TYPE>)\n        setPaginationInfo({ ...charactersData.info, page })\n        setLoader(false);\n      })\n      .catch(err => {\n        setLoader(false);\n        setErrorMessage(err?.message)\n      })\n  }\n\n  /**\n   * Author : Harsha Peddula ,Date: 10-11-2021\n   * @param event \n   * @param page \n   * Handles the pagination of characters\n   */\n  const handlePagination = (event: React.ChangeEvent<unknown>, page: number) => {\n    setLoader(true);\n    setRickAndMontyInfo([])\n    fetchCharacters(`${GET_CHARACTERS}?page=${page}`, page)\n  }\n\n  useEffect(() => {\n    setLoader(true);\n    fetchCharacters(GET_CHARACTERS, 1)\n    return () => {\n      setRickAndMontyInfo([]);\n      setPaginationInfo({ count: 0, pages: 0, next: '', prev: '', page: 1 });\n      setErrorMessage('')\n    }\n  }, [])\n  return (\n    <div className=\"bodyBackground\">\n      <Box p={2}>\n        {error && <Box className=\"loader\"><Typography variant=\"h1\">{error}</Typography></Box>}\n        {!error && <Paper elevation={4} className=\"pagination\">\n          <Pagination\n            count={paginationInfo.pages}\n            page={paginationInfo.page}\n            color=\"primary\"\n            onChange={handlePagination}\n            variant=\"outlined\"\n            sx={{ display: 'flex', justifyContent: 'center' }}\n            hideNextButton\n            hidePrevButton\n            disabled={loader}\n          />\n        </Paper>}\n        <Grid container spacing={3} mx={1}>\n          {loader && <Box className=\"loader\"><Typography variant=\"h1\">Loading....</Typography></Box>}\n          {rickAndMontyInfo?.map((characterInfo: RICK_MORTY_TYPE, index: number) => {\n            const [name, species, status] = characterInfo?.meta;\n            const [planetName, planetDimmension, planetType, count] = characterInfo?.originInfo;\n            return (\n              <Grid item key={index}>\n                <ThemeProvider theme={darkTheme}>\n                  <Paper elevation={6}>\n                    <Card sx={{ width: 400 }}>\n                      <CardHeader\n                        avatar={<Avatar\n                          alt=\"rickandmortyimages\"\n                          src={characterInfo.image as string}\n                          sx={{ width: 56, height: 56 }}\n                        />}\n                        title={name}\n                      />\n                      <CardMedia\n                        component=\"img\"\n                        image={characterInfo.image as string}\n                        alt=\"rickandmortyimages\"\n                      />\n                      <CardContent>\n                        <Typography variant=\"h6\" gutterBottom>Meta Information</Typography>\n                        <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Character Name : ${name}`}</Typography>\n                        <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Species : ${species}`}</Typography>\n                        <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Status : ${status}`}</Typography>\n                        <Typography variant=\"h6\" gutterBottom>Origin and Location Information</Typography>\n                        <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Name : ${planetName}`}</Typography>\n                        {planetDimmension && <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Dimension : ${planetDimmension}`}</Typography>}\n                        {planetType && <Typography variant=\"body2\" component=\"div\" gutterBottom>{`Type : ${planetType}`}</Typography>}\n                        {count && <Typography variant=\"body2\" component=\"div\" gutterBottom>{count}</Typography>}\n                        <CardActions>\n                          <ExpandMore\n                            expand={characterInfo.expanded}\n                            onClick={() => handleExpandClick(characterInfo)}\n                            aria-expanded={characterInfo.expanded}\n                            aria-label=\"show more\"\n                          >\n                            <Tooltip title=\"Expand to see the episodes character has been invloved in\">\n                              <ExpandMoreIcon />\n                            </Tooltip>\n                          </ExpandMore>\n                        </CardActions>\n                        {characterInfo.expanded && (\n                          <>\n                            <Typography variant=\"h5\" gutterBottom>Episodes</Typography>\n                            <ol>\n                              {characterInfo.episodes.map((episode: string, index: number) => (\n                                <li key={`${episode}${index}`}><Typography variant=\"body2\">{episode}</Typography></li>\n                              ))}\n                            </ol>\n                          </>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Paper>\n                </ThemeProvider>\n              </Grid>\n            )\n          })}\n        </Grid>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}